#
# CircleCI configuration file
#
version: 2.1

#
# Commands
#
commands:
  install_frontend_modules:
    steps:
      - restore_cache:
          keys:
            - v1-packages-frontend-angular-{{ checksum "package.json" }}
            - v1-packages-frontend-angular-
      - run:
          name: Install node modules
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-packages-frontend-angular-{{ checksum "package.json" }}
  install_image_service_modules:
    steps:
      - restore_cache:
          keys:
            - v1-packages-service-images-nest-rest-{{ checksum "package.json" }}
            - v1-packages-service-images-nest-rest-
      - run:
          name: Install node modules
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-packages-service-images-nest-rest-{{ checksum "package.json" }}
  jest_with_junit:
    steps:
      - run:
          name: Run tests with JUnit as reporter
          command: yarn jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT_DIR: "test-results/jest-test-results.xml"
      - store_test_results:
          path: test-results
#
# Vars
#
var_docker_default: &default_docker
  docker:
    - image: circleci/node:12

#
# Job definitions
#
jobs:
  build-frontend:
    <<: *default_docker
    working_directory: ~/repo/packages/frontend-angular
    steps:
      - checkout:
          path: ~/repo
      - install_frontend_modules
      - run:
          name: Build frontend-angular
          command: yarn build --configuration=production

  test-frontend:
    <<: *default_docker
    working_directory: ~/repo/packages/frontend-angular
    steps:
      - checkout:
          path: ~/repo
      - install_frontend_modules
      - jest_with_junit

  build-image-service:
    <<: *default_docker
    working_directory: ~/repo/packages/service-images-nest-rest
    steps:
      - checkout:
          path: ~/repo
      - install_image_service_modules
      - run:
          name: Build image service
          command: yarn build

  test-image-service:
    <<: *default_docker
    working_directory: ~/repo/packages/service-images-nest-rest
    steps:
      - checkout:
          path: ~/repo
      - install_image_service_modules
      - jest_with_junit

#
# Workflows
#
workflows:
  build-test-deploy:
    jobs:
      - build-frontend-angular
      - build-service-images-nest-rest
      - test-frontend:
          requires:
            - build-frontend-angular
      - test-image-service:
          requires:
            - build-service-images-nest-rest
